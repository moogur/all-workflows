name: Sonarqube, test, lint, and deploy

on:
  workflow_call:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  set-node-version:
    runs-on: ubuntu-latest
    outputs:
      node_version: ${{ steps.set-node-version.outputs.node_version }}

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3

      - name: 'Set node version'
        id: set-node-version
        run: |
          node_version=$(jq '.engines.node' package.json)
          echo "node_version=${node_version:1:-1}" >> $GITHUB_OUTPUT

  actions:
    needs: set-node-version
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 'Setup node'
        uses: actions/setup-node@v3
        with:
          node-version: ${{ needs.set-node-version.outputs.node_version }}

      - name: 'Cache node modules'
        id: cache
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}

      - name: 'Install'
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: 'Set variables'
        id: variables
        run: |
          raw_tag=`echo $(git describe --tags --abbrev=0)`
          echo "latest_tag=${raw_tag#v}" >> $GITHUB_OUTPUT

      - name: 'Test'
        run: npm run test:coverage

      - name: 'Sonarqube scanner'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          ANALYZE_BRANCH: ${{ github.ref_name }}
          LATEST_TAG: ${{ steps.variables.outputs.latest_tag }}
        run: |
          npm run sonar:publish

      - name: 'Lint'
        run: npm run lint

      - name: 'Build'
        run: npm run build
