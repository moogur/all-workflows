name: Sonarqube scanner

on:
  workflow_call:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  set-node-version:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3

      - name: 'Set node version'
        id: set-matrix
        run: |
          node_version=$(jq '.engines.node' package.json)
          echo "matrix={\"node_version\":[${node_version:1:-1}]}" >> $GITHUB_OUTPUT

  scanner:
    needs: set-node-version
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.set-node-version.outputs.matrix)}}

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 'Setup node'
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}

      - name: 'Cache node modules'
        id: cache
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}

      - name: 'Set variables'
        id: variables
        run: |
          echo "analyze_branch=`echo $(git rev-parse --abbrev-ref HEAD)`" >> $GITHUB_OUTPUT
          echo "sha_latest_commit=`echo $(git rev-parse --short HEAD)`" >> $GITHUB_OUTPUT
          raw_tag=`echo $(git describe --tags --abbrev=0)`
          echo "latest_tag=${raw_tag#v}" >> $GITHUB_OUTPUT

      - name: 'Install'
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: 'Sonarqube scanner'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_SERVER_URL: ${{ secrets.SONAR_SERVER_URL }}
          ANALYZE_BRANCH: ${{ steps.variables.outputs.analyze_branch }}
          LATEST_TAG: ${{ steps.variables.outputs.latest_tag }}
          SHA_LATEST_COMMIT: ${{ steps.variables.outputs.sha_latest_commit }}
        run: |
          echo ${{secrets.SONAR_SERVER_URL }} | sed 's/./& /g'
          npm run sonar:publish
