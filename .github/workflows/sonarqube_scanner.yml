name: Sonarqube scanner

on:
  workflow_call:
    inputs:
      branch:
        description: "Branch for analyze"
        type: string
        required: true
      latest_tag:
        description: "The last tag released"
        type: string
        required: true
      sha_latest_commit:
        description: "Hash of the last commit"
        type: string
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  set-node-version:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3

      - name: 'Set node version'
        id: set-matrix
        run: |
          node_version=$(jq '.engines.node' package.json)
          echo "matrix={\"node_version\":[${node_version:1:-1}]}" >> $GITHUB_OUTPUT

  test-and-lint:
    needs: set-node-version
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.set-node-version.outputs.matrix)}}

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3

      - name: 'Setup node'
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}

      - name: 'Cache node modules'
        id: cache
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}

      - name: 'Set variables'
        id: variables
        run: |
          tag=${GITHUB_REF/refs\/tags\//}
          version=${tag#v}
          echo "ANALYZE_BRANCH=`echo $(git rev-parse --abbrev-ref HEAD)`" >> $GITHUB_OUTPUT
          echo "LATEST_TAG=`echo $(git describe --tags --abbrev=0)`" >> $GITHUB_OUTPUT
          echo "SHA_LATEST_COMMIT=`echo $(git rev-parse --short HEAD)`" >> $GITHUB_OUTPUT

      - name: 'Install'
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: 'Sonarqube scanner'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_SERVER_URL: ${{ secrets.SONAR_SERVER_URL }}
          ANALYZE_BRANCH: ${{ steps.variables.outputs.ANALYZE_BRANCH }}
          LATEST_TAG: ${{ steps.variables.outputs.LATEST_TAG }}
          SHA_LATEST_COMMIT: ${{ steps.variables.outputs.SHA_LATEST_COMMIT }}
        run: |
          npm run sonar:publish
