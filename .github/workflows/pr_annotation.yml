name: Pull request annotation (jest, sonarqube)

on:
  workflow_call:
    inputs:
      sonar_project_key:
        description: "Repository key in sonarqube"
        type: string
        required: false
        default: ''
      skip_tests:
        description: "Skip pipeline tests"
        type: string
        required: false
        default: 'false'
      skip_sonar:
        description: "Skip pipeline sonar"
        type: string
        required: false
        default: 'false'
      folder:
        description: "Working folder"
        type: string
        required: false
        default: '.'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ inputs.folder }}
  cancel-in-progress: true

jobs:
  scanner:
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 'Prepare working folder'
        if: "inputs.folder != '.'"
        run: cp -r ${{ inputs.folder }}/. .

      - name: 'Set node version'
        id: set-node-version
        run: |
          node_version=$(jq '.engines.node' package.json)
          echo "node_version=${node_version:1:-1}" >> $GITHUB_OUTPUT

      - name: 'Setup node'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.set-node-version.outputs.node_version }}

      - name: 'Cache node modules'
        id: cache
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}

      - name: 'Install'
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          npm set @moogur:registry=https://npm.pkg.github.com/
          npm set "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}"
          npm ci

      - name: 'Test coverage (jest)'
        if: "inputs.skip_tests != 'true'"
        uses: ArtiomTr/jest-coverage-report-action@v2
        with:
          annotations: failed-tests
          test-script: npm run test:coverage

      - name: 'Set variables'
        if: "inputs.skip_sonar != 'true'"
        id: variables
        run: |
          raw_tag=`echo $(git describe --tags --abbrev=0)`
          echo "latest_tag=${raw_tag#v}" >> $GITHUB_OUTPUT

      - name: 'Sonarqube scanner'
        if: "inputs.skip_sonar != 'true'"
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          ANALYZE_BRANCH: ${{ github.head_ref }}
          LATEST_TAG: ${{ steps.variables.outputs.latest_tag }}
        run: |
          npm run sonar:publish

      - name: 'Sonarqube pull request comment'
        if: "inputs.skip_sonar != 'true'"
        uses: moogur/sonarqube-pr-comment@master
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: ${{ inputs.sonar_project_key }}
          GIT_BRANCH: ${{ github.head_ref }}
