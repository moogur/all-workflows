name: Auto deploy for docker container

on:
  workflow_call:
    inputs:
      repository_url:
        description: "Url for git repository"
        type: string
        required: true
      repository_branch:
        description: "Branch to check for updates"
        type: string
        required: true
      environment:
        description: "Environment"
        type: string
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  getting_date:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    outputs:
      current_commit_time: ${{ steps.check.outputs.current_commit_time }}
      last_update_commit_time: ${{ steps.check.outputs.last_update_commit_time }}

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 'Check'
        id: check
        run: |
          git clone --depth=1 --single-branch -b "${{ inputs.repository_branch }}" "${{ inputs.repository_url }}" temp_repository
          cd temp_repository || exit
          echo "last_update_commit_time=${{ vars.LAST_UPDATE_COMMIT_TIME }}" >> $GITHUB_OUTPUT
          echo "current_commit_time=$(git log -1 --format=%ct)" >> $GITHUB_OUTPUT
          cd ..
          rm -fr temp_repository

      - name: 'Update variable'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api \
            --method PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/$OWNER/$REPOSITORY/environments/${{ inputs.environment }}/variables/LAST_UPDATE_COMMIT_TIME \
            -f "name=LAST_UPDATE_COMMIT_TIME" -f "value=${{ steps.check.outputs.current_commit_time }}"

  # deploy:
  #   needs: getting_date
  #   if: steps.check.outputs.current_commit_time != steps.check.outputs.last_update_commit_time
  #   uses: ./.github/workflows/deploy_for_docker_container.yml
  #   secrets: inherit
