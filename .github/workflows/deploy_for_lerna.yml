name: Lerna publish packages

on:
  workflow_call:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 'Set node version'
        id: set-node-version
        run: |
          node_version=$(jq '.engines.node' package.json)
          echo "node_version=${node_version:1:-1}" >> $GITHUB_OUTPUT

      - name: 'Setup node'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.set-node-version.outputs.node_version }}

      - name: "Setup git"
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor}}@users.noreply.github.com"

      - name: "Remove husky from package.json"
        run: |
          new_package_json=$(jq 'del(.scripts.prepare)' package.json)
          rm -f package.json package-lock.json
          echo $new_package_json > package.json

      - name: 'Cache node modules'
        id: cache
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}

      - name: 'Install'
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          npm set @moogur:registry=https://npm.pkg.github.com/
          npm set "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}"
          npm i

      - name: "Prepared packages"
        run: |
          npm run build

      - name: "Publish packages"
        run: |
          git add .
          git commit -m "temporary"

          npx lerna publish --registry=https://npm.pkg.github.com from-package --yes
